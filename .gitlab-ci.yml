# SPDX-FileCopyrightText: none
# SPDX-License-Identifier: CC0-1.0

spec:
  inputs:
    VERSION_MAJOR_MINOR:
      default: 25.08
    VERSION_MICRO:
      default: 0
    NIGHTLY_VERSION_MAJOR_MINOR:
      default: 25.08

---

include:
  - project: sysadmin/ci-utilities
    file:
      - /gitlab-templates/blocks/workflow.yml
      - /gitlab-templates/reuse-lint.yml

variables:
  VERSION_MAJOR_MINOR: $[[ inputs.VERSION_MAJOR_MINOR | expand_vars ]]
  VERSION_MICRO: $[[ inputs.VERSION_MICRO | expand_vars ]]
  NIGHTLY_VERSION_MAJOR_MINOR: $[[ inputs.NIGHTLY_VERSION_MAJOR_MINOR | expand_vars ]]

reuse:
  stage: test

.tox_base:
  stage: test
  image: python:3.11
  tags:
    - Linux
  interruptible: true
  before_script:
    - python --version
    - python -m venv .venv
    - source .venv/bin/activate
    - pip install tox unittest-xml-reporting
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: JUnit*Results.xml

lint:
  extends: .tox_base
  script: tox -e lint

imports:
  extends: .tox_base
  script: tox -e check-imports

type-check:
  extends: .tox_base
  script: tox -e static-type-checker

.base-job:
  stage: build
  when: manual
  variables:
    QT_QPA_PLATFORM: offscreen
  tags:
    - VM
    - amd64
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - "tmp/*"
      - "resources/*"
      - "renders/*"
      - "result.html"
    reports:
      junit: JUnit*Results.xml

.flatpak-base-job:
  extends: .base-job
  image: storage.kde.org/vm-images/flatpak-builder
  variables:
    TEST_FFMPEG_CMD: flatpak --user run --command=ffmpeg --filesystem=/tmp org.kde.kdenlive
  before_script:
    - python3 -m ensurepip
    - python3 -m pip install pillow numpy
  script:
    - flatpak --user install -y $FLATPAK_REF
    - python3 start-render.py "flatpak --user run org.kde.kdenlive"

flatpak-nightly-test:
  extends: .flatpak-base-job
  variables:
    FLATPAK_REF: https://cdn.kde.org/flatpak/kdenlive-nightly/org.kde.kdenlive.flatpakref

flatpak-test:
  extends: .flatpak-base-job
  variables:
    FLATPAK_REF: org.kde.kdenlive

"appimage-release-$[[ inputs.VERSION_MAJOR_MINOR | expand_vars ]].$[[ inputs.VERSION_MICRO | expand_vars ]]-test":
  extends: .base-job
  image: storage.kde.org/vm-images/craft-appimage
  variables:
    APPIMAGE_FILENAME: kdenlive-$[[ inputs.VERSION_MAJOR_MINOR | expand_vars ]].$[[ inputs.VERSION_MICRO | expand_vars ]]-x86_64.AppImage
    APPIMAGE_URL: https://download.kde.org/stable/kdenlive/$[[ inputs.VERSION_MAJOR_MINOR | expand_vars ]]/linux/$APPIMAGE_FILENAME
    TEST_FFMPEG_CMD: $CI_PROJECT_DIR/squashfs-root/usr/bin/ffmpeg
    VERSION_MAJOR_MINOR: $VERSION_MAJOR_MINOR
    VERSION_MICRO: $VERSION_MICRO
  before_script:
    - python3 -m pip install pillow numpy
  script:
    - curl -OL $APPIMAGE_URL
    - chmod +x $CI_PROJECT_DIR/$APPIMAGE_FILENAME
    - $CI_PROJECT_DIR/$APPIMAGE_FILENAME --appimage-extract
    - python3 start-render.py $CI_PROJECT_DIR/squashfs-root/AppRun

.ci-build-base-linux:
  extends: .base-job
  image: storage.kde.org/vm-images/craft-appimage
  variables:
    TEST_FFMPEG_CMD: $CI_PROJECT_DIR/squashfs-root/usr/bin/ffmpeg
    BASE_DIR: $CI_PROJECT_DIR
  before_script:
    - python3 -m pip install pillow numpy
    - export APPIMAGE_FILENAME=$(curl -s $APPIMAGE_BASE --list-only | sed -n 's%.*href="\([^\"]*\.AppImage\)".*%\n\1%; ta; b; :a; s%.*\n%%; p')
    - echo $APPIMAGE_FILENAME
    - export APPIMAGE_URL=$APPIMAGE_BASE$APPIMAGE_FILENAME
    - echo $APPIMAGE_URL
  script:
    - curl -OL $APPIMAGE_URL
    - chmod +x $CI_PROJECT_DIR/$APPIMAGE_FILENAME
    - $CI_PROJECT_DIR/$APPIMAGE_FILENAME --appimage-extract
    - python3 start-render.py $CI_PROJECT_DIR/squashfs-root/AppRun

appimage-nightly-master-test:
  extends: .ci-build-base-linux
  variables:
    APPIMAGE_BASE: https://cdn.kde.org/ci-builds/multimedia/kdenlive/master/linux/

appimage-nightly-$[[ inputs.VERSION_MAJOR_MINOR | expand_vars ]].x-test:
  extends: .ci-build-base-linux
  variables:
    APPIMAGE_BASE: https://cdn.kde.org/ci-builds/multimedia/kdenlive/release-$NIGHTLY_VERSION_MAJOR_MINOR/linux/

.ci-build-base-windows:
  extends: .base-job
  image: storage.kde.org/vm-images/windows-msvc2022-qt69
  variables:
    TEST_FFMPEG_CMD: "${CI_PROJECT_DIR}/kdenlive-root/bin/ffmpeg.exe"
  before_script:
    - python -m pip install pillow numpy
    - $env:WINDOWSEXE_FILENAME = (Invoke-WebRequest -Uri $WINDOWSEXE_BASE).Links | Where-Object { $_.href -match '64\.7z' } | Select-Object -First 1 -ExpandProperty href
    - Write-Host $env:WINDOWSEXE_FILENAME
    - $WINDOWSEXE_URL = $WINDOWSEXE_BASE + $env:WINDOWSEXE_FILENAME
    - Write-Host $WINDOWSEXE_URL
  script:
    - curl -OL $WINDOWSEXE_URL
    - $env:WINDOWSEXE_FILENAME = [System.IO.Path]::GetFileNameWithoutExtension($env:WINDOWSEXE_FILENAME)
    - 7z x .\${env:WINDOWSEXE_FILENAME}.7z -okdenlive-root
    - python start-render.py "$CI_PROJECT_DIR\kdenlive-root\bin\kdenlive.exe"

windows-nightly-master-test:
  extends: .ci-build-base-windows
  variables:
    WINDOWSEXE_BASE: https://cdn.kde.org/ci-builds/multimedia/kdenlive/master/windows/

windows-nightly-$[[ inputs.VERSION_MAJOR_MINOR | expand_vars ]].x-test:
  extends: .ci-build-base-windows
  variables:
    WINDOWSEXE_BASE: https://cdn.kde.org/ci-builds/multimedia/kdenlive/release-${NIGHTLY_VERSION_MAJOR_MINOR}/windows/

windows-release-$[[ inputs.VERSION_MAJOR_MINOR | expand_vars ]].$[[ inputs.VERSION_MICRO | expand_vars ]]-test:
  extends: .base-job
  image: storage.kde.org/vm-images/windows-msvc2022-qt69
  variables:
    WINDOWSEXE_FILENAME: "kdenlive-${VERSION_MAJOR_MINOR}.${VERSION_MICRO}_standalone"
    WINDOWSEXE_URL: "https://download.kde.org/stable/kdenlive/$VERSION_MAJOR_MINOR/windows/${WINDOWSEXE_FILENAME}.exe"
    TEST_FFMPEG_CMD: "${CI_PROJECT_DIR}/${WINDOWSEXE_FILENAME}/bin/ffmpeg.exe"
  before_script:
    - python -m pip install pillow numpy
  script:
    - curl -OL $WINDOWSEXE_URL
    - 7z x .\${env:WINDOWSEXE_FILENAME}.exe
    - python start-render.py "$CI_PROJECT_DIR/$WINDOWSEXE_FILENAME/bin/kdenlive.exe"
